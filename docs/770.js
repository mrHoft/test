"use strict";(self.webpackChunknonograms=self.webpackChunknonograms||[]).push([[770],{4770:(e,t,s)=>{s.r(t),s.d(t,{Sound:()=>a});const i={dot:{url:"./public/dot.ogg",type:"multiple"},cross:{url:"./public/cross.ogg",type:"multiple"},whoosh:{url:"./public/whoosh01.ogg"},slide:{url:"./public/whoosh02.ogg"},step:{url:"./public/step.ogg",type:"multiple"}},n=[{name:"Intro",url:"./public/track01.ogg"},{name:"Tool In Space",url:"./public/track02.ogg"},{name:"Inside The Bucket",url:"./public/track03.ogg"}],o={win:["./public/win01.ogg"],loose:["./public/loose01.ogg","./public/loose02.ogg","./public/loose03.ogg","./public/loose04.ogg","./public/loose05.ogg"]},l=Object.keys(i).length+2*n.length+Object.values(o).reduce(((e,t)=>e+t.length),0);class a{static _instance;sound={volume:.5,muted:!1};music={volume:.25,muted:!0};sounds={};tracks=[];speech={win:[],loose:[]};_loaded=0;ready=0;_pending=null;_playing=null;readyCallback=()=>{};startPlayCallback=()=>{};exceptionCallback=()=>{};constructor(){if(a._instance)return a._instance;a._instance=this,Object.keys(o).forEach((e=>o[e].forEach((t=>this._getSound(t,e,"speech"))))),Object.keys(i).forEach((e=>this._getSound(i[e].url,e,i[e].type))),n.forEach((e=>this._getSound(e.url,e.name,"music"))),this._canplay=this._canplay.bind(this),this._ended=this._ended.bind(this)}set musicVolume(e){this.music.volume=e,this._playing&&(this._playing.audio.volume=e)}set musicMuted(e){this.music.muted=e,this._playing?this._playing.audio.muted=e:this.play(0,1)}play(e,t){if(this.music.muted)return;if(!this.tracks[e]||!this.tracks[e].ready)return console.log(`Pending music: ${e}. ${this.tracks[e]?this.tracks[e].name:""}`),void(this._pending=e);const s=this.tracks[e].audio;s.volume=this.music.volume,s.muted=this.music.muted,s.play().then((()=>{t&&s.addEventListener("ended",this._ended),this._playing={track:e,audio:s},this.startPlayCallback(this.tracks[e].name)})).catch((e=>{console.warn(e),this.music.muted=!0,this.exceptionCallback()}))}use(e){if(!this.sound.muted)if(this.sounds[e])for(let t=0;t<10;t+=1){const s=this.sounds[e][t];if(0===s.currentTime||s.ended)return s.volume=this.sound.volume,void s.play().catch((e=>console.log(e)))}else console.warn(`No sound: ${e}`)}say(e){if(this.sound.muted)return;if(!this.speech[e])return void console.warn(`No speech: ${e}`);const t=this.speech[e][~~(Math.random()*this.speech[e].length)];t.volume=this.sound.volume,t.play().catch((e=>console.log(e)))}_getSound(e,t,s=0){const i=this,n=new Request(e,{method:"GET",headers:{"Accept-Ranges":"1000000000"},referrerPolicy:"no-referrer"});fetch(n).then((e=>e)).then((async function(e){const n=await e.blob(),o=window.URL.createObjectURL(n);if(i._loaded+=1,i.ready=~~(i._loaded/l*100),"speech"===s){const e=new Audio;e.src=o,i.speech[t].push(e)}else if("music"===s){const e=new Audio;e.src=o,e.localInfo={name:t,track:i.tracks.length},e.addEventListener("canplay",i._canplay),i.tracks.push({audio:e,name:t})}else i.sounds[t]=Array.from({length:"multiple"===s?10:1},(()=>{const e=new Audio;return e.src=o,e}));i.readyCallback(i.ready,t)}))}_canplay(e){e.target.removeEventListener("canplay",this._canplay);const{name:t,track:s}=e.target.localInfo;this._loaded+=1,this.ready=~~(this._loaded/l*100),this.tracks[s].ready=!0,this._pending===s&&(this.play(this._pending,1),this._pending=null),this.readyCallback(this.ready,t)}_ended(){if(!this._playing)return;let e=(this._playing.track??0)+1;e>=this.tracks.length&&(e=0),this._playing=null,this.play(e,1)}}}}]);